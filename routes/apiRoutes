// const fs = require('fs'); 

// // alternative way to do this is to call notes in each query, but here, we just call it once 
// let notes = require('../db/db.json');
// const express = require('express')

// const router = express.Router(); 
// const { v4: uuidv4 } = require('uuid'); 
// router.use(express.urlencoded({ extended: true })); 
// router.use(express.json()); 
// router.use(express.static(`public`))//before express, anything in public to root level 


// //3a)
// router.get('/api/notes', (req,res) => {
//     // res.json will stringify it 
//     res.json(notes)
//     console.info(`${req.method} request received to get notes`)
// })

//  //3b) 
// router.post('/api/notes', (req, res) => {
//     console.info(`${req.method} request received to add a new note.`)
//     //req.body is where incoming content will be 
//         const { title, text } = req.body;
    
//         if(title && text){
//             const newNote = {
//                 title,
//                 text,
//                 note_id: uuidv4()
//             };
            
//             notes.push(newNote)
//                 fs.writeFile(`../db/db.json`, JSON.stringify(notes), (err) => {
//                 if(err) throw err
//                    console.log(`A new note has been written to JSON file.`)
//                  })

//                 const response = {
//                 status: 'success',
//                 body: newNote 
//                 }
        
//             // return note to client 
//             res.json(notes)
//         }
// })

// // 4)
// router.delete('/api/notes/:note_id', (req,res) => {
  

//      notes = notes.filter(({ note_id }) => note_id !== req.params.note_id);
    
//      fs.writeFile(`../db/db.json`, JSON.stringify(notes), (err) => {
//         if(err){
//             res.send(err)
//         }
//      })
//      res.json(notes) 
    
// }); 

// module.exports = router; 